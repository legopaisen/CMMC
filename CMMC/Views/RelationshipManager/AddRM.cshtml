@{
    ViewBag.Title = "Add Relationship Manager";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
 var branchlist = JSON.parse('@Html.Raw(Json.Encode(ViewBag.BrancheList))');
 var hasRecord = false;

 $(document).ready(function () {
  $.each(branchlist, function (ndx, item) {
   $("#branchList").append($('<option />').val(item.BranchCode).text(item.BranchName));
  });

  @*$("#btnSearch").on('click', function () {
   alert();
   $.ajax({
    cache: false,
    contentType: 'application/json',
    url: '@Url.Action("SearchEmployee", "Access")',
    data: { pEmployeeID: $("#txtNetworkID").val() },
    success: function (data) {
     if (data.Username == null) {
      hasRecord = false;
      toastr.error("Invalid Employee ID", "Error");
     }
     else {
      hasRecord = true;
      userdata = data;
      $("#txtFullName").val(userdata.FullName);
      //$("#txtEmail").val(userdata.EmailAddress);
     }
    },
    error: function () {
     //alert(JSON.stringify(data));
     toastr.error("Error in Employee ID Search ");
    }
   });
  });*@   
  //$("#btnSave").on('click', function () { 

  //});

  $('#rmDetails')
.formValidation({
 framework: 'bootstrap',
 icon: {
  valid: 'glyphicon glyphicon-ok',
  invalid: 'glyphicon glyphicon-remove',
  validating: 'glyphicon glyphicon-refresh'
 },
 fields: {
  //networkid: {
  // validators: {
  //  notEmpty: {
  //   message: 'The Network ID is required'
  //  },
  //  stringLength: {
  //   min: 7,
  //   max: 8,
  //   message: 'The Network ID must be more the 6 and less than or equal to 8 characters long'
  //  }
  // }
  //},
  branchassigned: {
   validators: {
    notEmpty: {
     message: 'The branch assigning is required'
    }
   }
  },
  txtFullName: {
   validators: {
    notEmpty: {
     message: 'Fullname is required'
    }
   }
  }
 }
})
 .on('change', '[name="base"]', function () {
  var thousandsSeparator = ',',
   decimalSeparator = '.';
  $('#CMSDetails')
   .formValidation('updateOption', 'number', 'numeric', 'thousandsSeparator', thousandsSeparator)
   .formValidation('updateOption', 'number', 'numeric', 'decimalSeparator', decimalSeparator)
   // and revalidate the number
   .formValidation('revalidateField', 'number')
 })
 .on('success.form.fv', function (e) {
  e.preventDefault();
  SaveDetails();
 });
 });
     
 function SaveDetails() {
  var model = {
   //'RMNetworkID': $('#txtNetworkID').val(),
   'RMFullName': $('#txtFullName').val(),
   'AddedDate': null,
   'AddedBy': '@Session["UserID"]',
   'BranchAssigned': $('#branchList').val()
  }

  $.ajax({
   cache: false,
   data: model,
   url: '@Url.Action("SaveNewRecord", "RelationshipManager")',
   type: 'POST',
   success: function (data) {
    if (data == 2) {
     Command: toastr["info"]("Information", "RM already exist in the branch. Process terminated!")
    } else if (data == 1) {
     window.location = '@Url.Action("Index","RelationshipManager")'
    }
   },
   error: function (e) {
   }
  });
 }

 function caps(id) {
  document.getElementById(id).value = document.getElementById(id).value.toUpperCase();
 }
</script>

<h2 class="page-header">
 Add Relationship Manager
</h2>
<form id="rmDetails">
 <div class="panel panel-primary">
  <div class="panel-heading">Relationship Manager Details</div>
  <div class="panel-body">
   <div class="col-lg-5">
    @*<div class="form-group">
     <div class="input-group">
      <div class="input-group-addon">Network ID</div>
      <input class="form-control" type="text" placeholder="NetworkID" id="txtNetworkID" name="networkid" />
      <span class="input-group-btn">
       <button class="btn btn-default" type="button" id="btnSearch">
        <span class="glyphicon glyphicon-search"></span>
       </button>
      </span>
     </div>
    </div>*@
    <div class="form-group">
     <div class="input-group">
      <div class="input-group-addon">Fullname</div>
      <input class="form-control" type="text" placeholder="Input FullName" id="txtFullName" name="txtFullName" autocomplete="off" onblur="caps(this.id);" />
     </div>
    </div>

    <div class="form-group">
     <div class="input-group">
      <div class="input-group-addon">Branch Assigned</div>
      <select class="form-control" id="branchList" name="branchassigned">
       <option disabled selected value>-------- select branch --------</option>
      </select>
     </div>
    </div>
   </div>
  </div>
  <div class="panel-footer">
   <button class="btn btn-primary" type="submit" id="btnSave"><i class="glyphicon glyphicon-floppy-save"></i> Save</button>
   <button type="button" onclick="javascript: window.location='@Url.Action("Index", "RelationshipManager")'" id="btnSave" name="btnSave" class="btn btn-danger"><i class="glyphicon glyphicon-floppy-remove"></i> Cancel</button>
  </div>
 </div>
</form>



